"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8468],{12254:function(t,e,s){s.d(e,{W:function(){return a}});var i=s(25634),n=s(6475),r=s(68457);class a extends r.Z{constructor(t){let{chains:e=n.gL9,options:s}=t;super(),(0,i._)(this,"id",void 0),(0,i._)(this,"name",void 0),(0,i._)(this,"chains",void 0),(0,i._)(this,"options",void 0),(0,i._)(this,"ready",void 0),this.chains=e,this.options=s}getBlockExplorerUrls(t){let e=t.explorers?.map(t=>t.url)??[];return e.length>0?e:void 0}isChainUnsupported(t){return!this.chains.some(e=>e.chainId===t)}updateChains(t){this.chains=t}}},54354:function(t,e,s){s.d(e,{A:function(){return a},C:function(){return h},R:function(){return c},S:function(){return d},U:function(){return u},a:function(){return o}});var i=s(25634);class n extends Error{constructor(t,e){let{cause:s,code:n,data:r}=e;if(!Number.isInteger(n))throw Error('"code" must be an integer.');if(!t||"string"!=typeof t)throw Error('"message" must be a nonempty string.');super(t),(0,i._)(this,"cause",void 0),(0,i._)(this,"code",void 0),(0,i._)(this,"data",void 0),this.cause=s,this.code=n,this.data=r}}class r extends n{constructor(t,e){let{cause:s,code:i,data:n}=e;if(!(Number.isInteger(i)&&i>=1e3&&i<=4999))throw Error('"code" must be an integer such that: 1000 <= code <= 4999');super(t,{cause:s,code:i,data:n})}}class a extends Error{constructor(){super(...arguments),(0,i._)(this,"name","AddChainError"),(0,i._)(this,"message","Error adding chain")}}class h extends Error{constructor(t){let{chainId:e,connectorId:s}=t;super(`Chain "${e}" not configured for connector "${s}".`),(0,i._)(this,"name","ChainNotConfigured")}}class o extends Error{constructor(){super(...arguments),(0,i._)(this,"name","ConnectorNotFoundError"),(0,i._)(this,"message","Connector not found")}}class c extends n{constructor(t){super("Resource unavailable",{cause:t,code:-32002}),(0,i._)(this,"name","ResourceUnavailable")}}class d extends r{constructor(t){super("Error switching chain",{cause:t,code:4902}),(0,i._)(this,"name","SwitchChainError")}}class u extends r{constructor(t){super("User rejected request",{cause:t,code:4001}),(0,i._)(this,"name","UserRejectedRequestError")}}},40970:function(t,e,s){s.d(e,{n:function(){return i}});function i(t){return"string"==typeof t?Number.parseInt(t,"0x"===t.trim().substring(0,2)?16:10):"bigint"==typeof t?Number(t):t}},18468:function(t,e,s){s.r(e),s.d(e,{WalletConnectV1Connector:function(){return _}});var i=s(49459),n=s(9525),r=s(25634),a=s(13034),h=s(19485),o=s(241),c=s(16441),d=s(12254),u=s(40970),l=s(54354);s(68457);let m="last-used-chain-id",g="last-session";var p=new WeakMap,w=new WeakMap,C=new WeakSet,v=new WeakSet;class _ extends d.W{constructor(t){super(t),(0,i._)(this,v),(0,i._)(this,C),(0,r._)(this,"id",a.w.walletConnectV1),(0,r._)(this,"name","WalletConnectV1"),(0,r._)(this,"ready",!0),(0,n._)(this,p,{writable:!0,value:void 0}),(0,n._)(this,w,{writable:!0,value:void 0}),(0,r._)(this,"walletName",void 0),(0,r._)(this,"onSwitchChain",()=>{this.emit("message",{type:"switch_chain"})}),(0,r._)(this,"onDisplayUri",async(t,e)=>{t&&this.emit("message",{data:t,type:"display_uri_error"}),this.emit("message",{data:e.params[0],type:"display_uri"})}),(0,r._)(this,"onRequestSent",(t,e)=>{t&&this.emit("message",{data:t,type:"request"}),this.emit("message",{data:e.params[0],type:"request"})}),(0,r._)(this,"onMessage",t=>{this.emit("message",t)}),(0,r._)(this,"onAccountsChanged",t=>{0===t.length?this.emit("disconnect"):this.emit("change",{account:h.getAddress(t[0])})}),(0,r._)(this,"onChainChanged",t=>{let e=(0,u.n)(t),s=this.isChainUnsupported(e);(0,n.b)(this,w).setItem(m,String(t)),this.emit("change",{chain:{id:e,unsupported:s}})}),(0,r._)(this,"onDisconnect",async()=>{this.walletName=void 0,(0,n.b)(this,w).removeItem(m),(0,n.b)(this,w).removeItem(g),(0,i.a)(this,v,f).call(this),this.emit("disconnect")}),(0,n.a)(this,w,t.storage)}async connect(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let e=t;if(!e){let s=await (0,n.b)(this,w).getItem(m),r=s?parseInt(s):void 0;r&&!this.isChainUnsupported(r)&&(e=r)}let a=await this.getProvider({chainId:e,create:!0});this.setupListeners(),setTimeout(()=>this.emit("message",{type:"connecting"}),0);let c=await a.enable(),d=h.getAddress(c[0]),u=await this.getChainId(),g=this.isChainUnsupported(u);if(this.walletName=a.connector?.peerMeta?.name??"",t)try{await this.switchChain(t),u=t,g=this.isChainUnsupported(u)}catch(p){console.error(`could not switch to desired chain id: ${t} `,p)}return(0,i.a)(this,C,b).call(this),this.emit("connect",{account:d,chain:{id:u,unsupported:g},provider:a}),{account:d,chain:{id:u,unsupported:g},provider:new o.Q(a)}}catch(v){if(/user closed modal/i.test(v.message))throw new l.U(v);throw v}}async disconnect(){let t=await this.getProvider();await t.disconnect()}async getAccount(){let t=await this.getProvider(),e=t.accounts;return h.getAddress(e[0])}async getChainId(){let t=await this.getProvider(),e=(0,u.n)(t.chainId);return e}async getProvider(){let{chainId:t,create:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!(0,n.b)(this,p)||t||e){let i=this.options?.infuraId?{}:this.chains.reduce((t,e)=>({...t,[e.chainId]:e.rpc[0]}),{}),r=(await Promise.all([s.e(2592),s.e(1136)]).then(s.bind(s,61136))).default,a=await (0,n.b)(this,w).getItem(g),h=a?JSON.parse(a):void 0;this.walletName=h?.peerMeta?.name||void 0,(0,n.a)(this,p,new r({...this.options,chainId:t,rpc:{...i,...this.options?.rpc},session:h||void 0}))}return(0,n.b)(this,p)}async getSigner(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},[e,s]=await Promise.all([this.getProvider({chainId:t}),this.getAccount()]);return new o.Q(e,t).getSigner(s)}async isAuthorized(){try{let t=await this.getAccount();return!!t}catch{return!1}}async switchChain(t){let e=await this.getProvider(),s=c.hexValue(t);try{return await Promise.race([e.request({method:"wallet_switchEthereumChain",params:[{chainId:s}]}),new Promise(e=>this.on("change",s=>{let{chain:i}=s;i?.id===t&&e(t)}))]),this.chains.find(e=>e.chainId===t)??{chainId:t,name:`Chain ${s}`,network:`${s}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],shortName:"eth",chain:"ETH",slug:"ethereum",testnet:!1}}catch(a){let i="string"==typeof a?a:a?.message;if(/user rejected request/i.test(i))throw new l.U(a);let n=this.chains.find(e=>e.chainId===t);if(!n)throw new l.S(`Chain ${t} is not added in the list of supported chains`);if(/Unrecognized chain ID/i.test(i)){this.emit("message",{type:"add_chain"});let r=this.getBlockExplorerUrls(n);return await e.request({method:"wallet_addEthereumChain",params:[{chainId:s,chainName:n.name,nativeCurrency:n.nativeCurrency,rpcUrls:n.rpc,blockExplorerUrls:r}]}),n}throw new l.S(a)}}async setupListeners(){(0,n.b)(this,p)&&((0,n.b)(this,p).on("accountsChanged",this.onAccountsChanged),(0,n.b)(this,p).on("chainChanged",this.onChainChanged),(0,n.b)(this,p).on("disconnect",this.onDisconnect),(0,n.b)(this,p).on("message",this.onMessage),(0,n.b)(this,p).on("switchChain",this.onSwitchChain),(0,n.b)(this,p).on("display_uri",this.onDisplayUri),(0,n.b)(this,p).on("call_request_sent",this.onRequestSent))}}async function b(){let t=n.b(this,p)?.connector.session;this.walletName=t?.peerMeta?.name||"";let e=JSON.stringify(t);(0,n.b)(this,w).setItem(g,e)}function f(){(0,n.b)(this,p)&&((0,n.b)(this,p).removeListener("accountsChanged",this.onAccountsChanged),(0,n.b)(this,p).removeListener("chainChanged",this.onChainChanged),(0,n.b)(this,p).removeListener("disconnect",this.onDisconnect),(0,n.b)(this,p).removeListener("message",this.onMessage),(0,n.b)(this,p).removeListener("switchChain",this.onSwitchChain),(0,n.b)(this,p).removeListener("display_uri",this.onDisplayUri),(0,n.b)(this,p).removeListener("call_request_sent",this.onRequestSent))}}}]);